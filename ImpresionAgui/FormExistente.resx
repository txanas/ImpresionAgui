<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>